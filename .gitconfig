[user]
  email = frederikgalle@fastmail.fm
  name = Frederik
[color "branch"]
  current = green
  local = yellow
  remote = cyan
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red
  new = green
  commit = yellow
  whitespace = normal red
[color "status"]
  added = green
  changed = yellow
  unchanged = cyan
  untracked = cyan
  nobranch = red
[color "interactive"]
  header = yellow
  help = red
  prompt = blue
[alias]
  git = !exec git

  co = checkout

  # Add to staging area
  a  = add
  up = add --update --patch
  ap = add --patch
  patch = add --patch

  # Commit
  c  = commit --verbose
  cm = commit -m
  amend = commit --amend --verbose

  # Unstage the changes to some files
  unstage = reset HEAD --

  # Undo the last commit
  undo = reset "HEAD^"

  # Short and verbose statuses
  s  = "!f() { printf '\\n' && cd -- ${GIT_PREFIX:-.}; git status --short $@ && printf '\\n'; }; f"
  sv = status
  watch = "!while :; do clear; git status --short; git --no-pager diff --shortstat; sleep 2; done"
  watchh = "!while :; do clear; git log; sleep 2; done"

  # Overview of branches
  b   = branch
  bl  = branch --verbose
  bla = branch --verbose --all

  # Diffs
  sd = diff --staged
  d = diff
  sdiff = "!git submodule foreach 'git diff'"

  # Show list of changes between two commits
  changes="!f() { git log --pretty=format:'* %s' $1..$2;  }; f"

  # Overview of history
  sl = log --oneline --decorate -20
  sla = log --oneline --decorate --graph --all -20
  slp = log --oneline --decorate
  slap = log --oneline --decorate --graph --all

  # Show files that are being ignored due to git update-index --assume-unchanged
  ignored = !git ls-files -v `git rev-parse --show-toplevel` | grep "^[a-z]"

  # Remove deleted files
  r = !git ls-files -z --deleted | xargs -0 git rm

  # Exclude file locally
  exclude = !sh -c 'echo "$1" >> .git/info/exclude' -

  # Prune deleted branches
  prune = fetch --prune

  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch -a
  remotes = remote -v

  # list aliases
  alias = "!git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\ \t => \\2/' | sort | column -t -s $'\\t'"
[core]
  editor = nvim
  pager = delta
  quotepath = false
  excludesfile = ~/.gitignore
  autocrlf = input
  # Treat spaces before tabs and all kinds of trailing whitespace as an error
  # [default] trailing-space: looks for spaces at the end of a line
  # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
  whitespace = space-before-tab,-indent-with-non-tab,trailing-space
[push]
  default = upstream
  recurseSubmodules = check
[fetch]
  prune = true
[help]
  autocorrect = 1
[diff "bin"]
  # Use `hexdump` to diff binary files
  textconv = hexdump -v -C
[diff]
  algorithm = patience
  mnemonicprefix = true
  renames = copies
  submodule=log
[log]
  date = "auto:human"
[rebase]
  autosquash = true
  autostash = true
[merge]
  tool = vimdiff
  conflictstyle = diff3
[mergetool]
  keepBackup = false
[push]
  followTags = true
[status]
  submodulesummary = 1
[init]
  templatedir = ~/.git_template
[hooks "confirm"]
	match = TODO
[commit]
	template = ~/.gitmessage
[url "github.com:"]
  insteadOf = github:
[interactive]
  diffFilter = delta --color-only
[delta]
  features = decorations
  whitespace-error-style = 22 reverse
[delta "decorations"]
  commit-decoration-style = bold yellow box ul
  file-style = bold yellow ul
  file-decoration-style = none
